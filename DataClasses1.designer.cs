#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NadhamniCSharp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Nadhamni")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAdresse(Adresse instance);
    partial void UpdateAdresse(Adresse instance);
    partial void DeleteAdresse(Adresse instance);
    partial void InsertChild(Child instance);
    partial void UpdateChild(Child instance);
    partial void DeleteChild(Child instance);
    partial void InsertParent(Parent instance);
    partial void UpdateParent(Parent instance);
    partial void DeleteParent(Parent instance);
    partial void InsertPartner(Partner instance);
    partial void UpdatePartner(Partner instance);
    partial void DeletePartner(Partner instance);
    partial void InsertTASK(TASK instance);
    partial void UpdateTASK(TASK instance);
    partial void DeleteTASK(TASK instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::NadhamniCSharp.Properties.Settings.Default.NadhamniConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adresse> Adresse
		{
			get
			{
				return this.GetTable<Adresse>();
			}
		}
		
		public System.Data.Linq.Table<Child> Child
		{
			get
			{
				return this.GetTable<Child>();
			}
		}
		
		public System.Data.Linq.Table<Parent> Parent
		{
			get
			{
				return this.GetTable<Parent>();
			}
		}
		
		public System.Data.Linq.Table<Partner> Partner
		{
			get
			{
				return this.GetTable<Partner>();
			}
		}
		
		public System.Data.Linq.Table<TASK> TASK
		{
			get
			{
				return this.GetTable<TASK>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adresse")]
	public partial class Adresse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Adresseid;
		
		private System.Nullable<int> _AdresseNumero;
		
		private string _AdresseRue;
		
		private System.Nullable<int> _AdresseZip;
		
		private EntitySet<User> _User;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdresseidChanging(int value);
    partial void OnAdresseidChanged();
    partial void OnAdresseNumeroChanging(System.Nullable<int> value);
    partial void OnAdresseNumeroChanged();
    partial void OnAdresseRueChanging(string value);
    partial void OnAdresseRueChanged();
    partial void OnAdresseZipChanging(System.Nullable<int> value);
    partial void OnAdresseZipChanged();
    #endregion
		
		public Adresse()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresseid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Adresseid
		{
			get
			{
				return this._Adresseid;
			}
			set
			{
				if ((this._Adresseid != value))
				{
					this.OnAdresseidChanging(value);
					this.SendPropertyChanging();
					this._Adresseid = value;
					this.SendPropertyChanged("Adresseid");
					this.OnAdresseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseNumero", DbType="Int")]
		public System.Nullable<int> AdresseNumero
		{
			get
			{
				return this._AdresseNumero;
			}
			set
			{
				if ((this._AdresseNumero != value))
				{
					this.OnAdresseNumeroChanging(value);
					this.SendPropertyChanging();
					this._AdresseNumero = value;
					this.SendPropertyChanged("AdresseNumero");
					this.OnAdresseNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseRue", DbType="VarChar(50)")]
		public string AdresseRue
		{
			get
			{
				return this._AdresseRue;
			}
			set
			{
				if ((this._AdresseRue != value))
				{
					this.OnAdresseRueChanging(value);
					this.SendPropertyChanging();
					this._AdresseRue = value;
					this.SendPropertyChanged("AdresseRue");
					this.OnAdresseRueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseZip", DbType="Int")]
		public System.Nullable<int> AdresseZip
		{
			get
			{
				return this._AdresseZip;
			}
			set
			{
				if ((this._AdresseZip != value))
				{
					this.OnAdresseZipChanging(value);
					this.SendPropertyChanging();
					this._AdresseZip = value;
					this.SendPropertyChanged("AdresseZip");
					this.OnAdresseZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adresse_User", Storage="_User", ThisKey="Adresseid", OtherKey="Adresseid")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Adresse = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Adresse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Child")]
	public partial class Child : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChildId;
		
		private string _ChildName;
		
		private System.DateTime _ChildDob;
		
		private string _ChildEducation;
		
		private string _ChildEducationLevel;
		
		private string _ChildSchool;
		
		private int _ChildDistance;
		
		private string _Gender;
		
		private System.Data.Linq.Binary _ChildPhoto;
		
		private string _UserLogin;
		
		private EntityRef<User> _User;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChildIdChanging(int value);
    partial void OnChildIdChanged();
    partial void OnChildNameChanging(string value);
    partial void OnChildNameChanged();
    partial void OnChildDobChanging(System.DateTime value);
    partial void OnChildDobChanged();
    partial void OnChildEducationChanging(string value);
    partial void OnChildEducationChanged();
    partial void OnChildEducationLevelChanging(string value);
    partial void OnChildEducationLevelChanged();
    partial void OnChildSchoolChanging(string value);
    partial void OnChildSchoolChanged();
    partial void OnChildDistanceChanging(int value);
    partial void OnChildDistanceChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnChildPhotoChanging(System.Data.Linq.Binary value);
    partial void OnChildPhotoChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    #endregion
		
		public Child()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					this.OnChildIdChanging(value);
					this.SendPropertyChanging();
					this._ChildId = value;
					this.SendPropertyChanged("ChildId");
					this.OnChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ChildName
		{
			get
			{
				return this._ChildName;
			}
			set
			{
				if ((this._ChildName != value))
				{
					this.OnChildNameChanging(value);
					this.SendPropertyChanging();
					this._ChildName = value;
					this.SendPropertyChanged("ChildName");
					this.OnChildNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildDob", DbType="Date NOT NULL")]
		public System.DateTime ChildDob
		{
			get
			{
				return this._ChildDob;
			}
			set
			{
				if ((this._ChildDob != value))
				{
					this.OnChildDobChanging(value);
					this.SendPropertyChanging();
					this._ChildDob = value;
					this.SendPropertyChanged("ChildDob");
					this.OnChildDobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildEducation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ChildEducation
		{
			get
			{
				return this._ChildEducation;
			}
			set
			{
				if ((this._ChildEducation != value))
				{
					this.OnChildEducationChanging(value);
					this.SendPropertyChanging();
					this._ChildEducation = value;
					this.SendPropertyChanged("ChildEducation");
					this.OnChildEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildEducationLevel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ChildEducationLevel
		{
			get
			{
				return this._ChildEducationLevel;
			}
			set
			{
				if ((this._ChildEducationLevel != value))
				{
					this.OnChildEducationLevelChanging(value);
					this.SendPropertyChanging();
					this._ChildEducationLevel = value;
					this.SendPropertyChanged("ChildEducationLevel");
					this.OnChildEducationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildSchool", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ChildSchool
		{
			get
			{
				return this._ChildSchool;
			}
			set
			{
				if ((this._ChildSchool != value))
				{
					this.OnChildSchoolChanging(value);
					this.SendPropertyChanging();
					this._ChildSchool = value;
					this.SendPropertyChanged("ChildSchool");
					this.OnChildSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildDistance", DbType="Int NOT NULL")]
		public int ChildDistance
		{
			get
			{
				return this._ChildDistance;
			}
			set
			{
				if ((this._ChildDistance != value))
				{
					this.OnChildDistanceChanging(value);
					this.SendPropertyChanging();
					this._ChildDistance = value;
					this.SendPropertyChanged("ChildDistance");
					this.OnChildDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildPhoto", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ChildPhoto
		{
			get
			{
				return this._ChildPhoto;
			}
			set
			{
				if ((this._ChildPhoto != value))
				{
					this.OnChildPhotoChanging(value);
					this.SendPropertyChanging();
					this._ChildPhoto = value;
					this.SendPropertyChanged("ChildPhoto");
					this.OnChildPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(50)")]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Child", Storage="_User", ThisKey="UserLogin", OtherKey="Login", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Child.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Child.Add(this);
						this._UserLogin = value.Login;
					}
					else
					{
						this._UserLogin = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parent")]
	public partial class Parent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentID;
		
		private string _ParentName;
		
		private System.DateTime _ParentDob;
		
		private string _ParentHealth;
		
		private string _ParentIlness;
		
		private string _ParentGender;
		
		private System.Data.Linq.Binary _ParentPhoto;
		
		private string _UserLogin;
		
		private EntityRef<User> _User;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnParentNameChanging(string value);
    partial void OnParentNameChanged();
    partial void OnParentDobChanging(System.DateTime value);
    partial void OnParentDobChanged();
    partial void OnParentHealthChanging(string value);
    partial void OnParentHealthChanged();
    partial void OnParentIlnessChanging(string value);
    partial void OnParentIlnessChanged();
    partial void OnParentGenderChanging(string value);
    partial void OnParentGenderChanged();
    partial void OnParentPhotoChanging(System.Data.Linq.Binary value);
    partial void OnParentPhotoChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    #endregion
		
		public Parent()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this.OnParentNameChanging(value);
					this.SendPropertyChanging();
					this._ParentName = value;
					this.SendPropertyChanged("ParentName");
					this.OnParentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDob", DbType="Date NOT NULL")]
		public System.DateTime ParentDob
		{
			get
			{
				return this._ParentDob;
			}
			set
			{
				if ((this._ParentDob != value))
				{
					this.OnParentDobChanging(value);
					this.SendPropertyChanging();
					this._ParentDob = value;
					this.SendPropertyChanged("ParentDob");
					this.OnParentDobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentHealth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentHealth
		{
			get
			{
				return this._ParentHealth;
			}
			set
			{
				if ((this._ParentHealth != value))
				{
					this.OnParentHealthChanging(value);
					this.SendPropertyChanging();
					this._ParentHealth = value;
					this.SendPropertyChanged("ParentHealth");
					this.OnParentHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIlness", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentIlness
		{
			get
			{
				return this._ParentIlness;
			}
			set
			{
				if ((this._ParentIlness != value))
				{
					this.OnParentIlnessChanging(value);
					this.SendPropertyChanging();
					this._ParentIlness = value;
					this.SendPropertyChanged("ParentIlness");
					this.OnParentIlnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentGender
		{
			get
			{
				return this._ParentGender;
			}
			set
			{
				if ((this._ParentGender != value))
				{
					this.OnParentGenderChanging(value);
					this.SendPropertyChanging();
					this._ParentGender = value;
					this.SendPropertyChanged("ParentGender");
					this.OnParentGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPhoto", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ParentPhoto
		{
			get
			{
				return this._ParentPhoto;
			}
			set
			{
				if ((this._ParentPhoto != value))
				{
					this.OnParentPhotoChanging(value);
					this.SendPropertyChanging();
					this._ParentPhoto = value;
					this.SendPropertyChanged("ParentPhoto");
					this.OnParentPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Parent", Storage="_User", ThisKey="UserLogin", OtherKey="Login", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Parent.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Parent.Add(this);
						this._UserLogin = value.Login;
					}
					else
					{
						this._UserLogin = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partner")]
	public partial class Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartnerId;
		
		private string _PartnerName;
		
		private System.DateTime _PartnerDob;
		
		private string _PartnerHealth;
		
		private string _PartnerIlness;
		
		private string _PartnerJob;
		
		private string _PartnerGender;
		
		private System.Data.Linq.Binary _PartnerPhoto;
		
		private string _UserLogin;
		
		private EntityRef<User> _User;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartnerIdChanging(int value);
    partial void OnPartnerIdChanged();
    partial void OnPartnerNameChanging(string value);
    partial void OnPartnerNameChanged();
    partial void OnPartnerDobChanging(System.DateTime value);
    partial void OnPartnerDobChanged();
    partial void OnPartnerHealthChanging(string value);
    partial void OnPartnerHealthChanged();
    partial void OnPartnerIlnessChanging(string value);
    partial void OnPartnerIlnessChanged();
    partial void OnPartnerJobChanging(string value);
    partial void OnPartnerJobChanged();
    partial void OnPartnerGenderChanging(string value);
    partial void OnPartnerGenderChanged();
    partial void OnPartnerPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPartnerPhotoChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    #endregion
		
		public Partner()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PartnerId
		{
			get
			{
				return this._PartnerId;
			}
			set
			{
				if ((this._PartnerId != value))
				{
					this.OnPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._PartnerId = value;
					this.SendPropertyChanged("PartnerId");
					this.OnPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartnerName
		{
			get
			{
				return this._PartnerName;
			}
			set
			{
				if ((this._PartnerName != value))
				{
					this.OnPartnerNameChanging(value);
					this.SendPropertyChanging();
					this._PartnerName = value;
					this.SendPropertyChanged("PartnerName");
					this.OnPartnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerDob", DbType="Date NOT NULL")]
		public System.DateTime PartnerDob
		{
			get
			{
				return this._PartnerDob;
			}
			set
			{
				if ((this._PartnerDob != value))
				{
					this.OnPartnerDobChanging(value);
					this.SendPropertyChanging();
					this._PartnerDob = value;
					this.SendPropertyChanged("PartnerDob");
					this.OnPartnerDobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerHealth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartnerHealth
		{
			get
			{
				return this._PartnerHealth;
			}
			set
			{
				if ((this._PartnerHealth != value))
				{
					this.OnPartnerHealthChanging(value);
					this.SendPropertyChanging();
					this._PartnerHealth = value;
					this.SendPropertyChanged("PartnerHealth");
					this.OnPartnerHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerIlness", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartnerIlness
		{
			get
			{
				return this._PartnerIlness;
			}
			set
			{
				if ((this._PartnerIlness != value))
				{
					this.OnPartnerIlnessChanging(value);
					this.SendPropertyChanging();
					this._PartnerIlness = value;
					this.SendPropertyChanged("PartnerIlness");
					this.OnPartnerIlnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerJob", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartnerJob
		{
			get
			{
				return this._PartnerJob;
			}
			set
			{
				if ((this._PartnerJob != value))
				{
					this.OnPartnerJobChanging(value);
					this.SendPropertyChanging();
					this._PartnerJob = value;
					this.SendPropertyChanged("PartnerJob");
					this.OnPartnerJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartnerGender
		{
			get
			{
				return this._PartnerGender;
			}
			set
			{
				if ((this._PartnerGender != value))
				{
					this.OnPartnerGenderChanging(value);
					this.SendPropertyChanging();
					this._PartnerGender = value;
					this.SendPropertyChanged("PartnerGender");
					this.OnPartnerGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerPhoto", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PartnerPhoto
		{
			get
			{
				return this._PartnerPhoto;
			}
			set
			{
				if ((this._PartnerPhoto != value))
				{
					this.OnPartnerPhotoChanging(value);
					this.SendPropertyChanging();
					this._PartnerPhoto = value;
					this.SendPropertyChanged("PartnerPhoto");
					this.OnPartnerPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Partner", Storage="_User", ThisKey="UserLogin", OtherKey="Login", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Partner.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Partner.Add(this);
						this._UserLogin = value.Login;
					}
					else
					{
						this._UserLogin = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK")]
	public partial class TASK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TaskName;
		
		private string _TaskStatus;
		
		private System.DateTime _TaskStartTime;
		
		private System.DateTime _TaskEndTime;
		
		private string _TaskLocation;
		
		private string _TaskSpecialEvent;
		
		private string _TaskDetails;
		
		private string _UserLogin;
		
		private EntityRef<User> _User;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnTaskStatusChanging(string value);
    partial void OnTaskStatusChanged();
    partial void OnTaskStartTimeChanging(System.DateTime value);
    partial void OnTaskStartTimeChanged();
    partial void OnTaskEndTimeChanging(System.DateTime value);
    partial void OnTaskEndTimeChanged();
    partial void OnTaskLocationChanging(string value);
    partial void OnTaskLocationChanged();
    partial void OnTaskSpecialEventChanging(string value);
    partial void OnTaskSpecialEventChanged();
    partial void OnTaskDetailsChanging(string value);
    partial void OnTaskDetailsChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    #endregion
		
		public TASK()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskStatus
		{
			get
			{
				return this._TaskStatus;
			}
			set
			{
				if ((this._TaskStatus != value))
				{
					this.OnTaskStatusChanging(value);
					this.SendPropertyChanging();
					this._TaskStatus = value;
					this.SendPropertyChanged("TaskStatus");
					this.OnTaskStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime TaskStartTime
		{
			get
			{
				return this._TaskStartTime;
			}
			set
			{
				if ((this._TaskStartTime != value))
				{
					this.OnTaskStartTimeChanging(value);
					this.SendPropertyChanging();
					this._TaskStartTime = value;
					this.SendPropertyChanged("TaskStartTime");
					this.OnTaskStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime TaskEndTime
		{
			get
			{
				return this._TaskEndTime;
			}
			set
			{
				if ((this._TaskEndTime != value))
				{
					this.OnTaskEndTimeChanging(value);
					this.SendPropertyChanging();
					this._TaskEndTime = value;
					this.SendPropertyChanged("TaskEndTime");
					this.OnTaskEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskLocation", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TaskLocation
		{
			get
			{
				return this._TaskLocation;
			}
			set
			{
				if ((this._TaskLocation != value))
				{
					this.OnTaskLocationChanging(value);
					this.SendPropertyChanging();
					this._TaskLocation = value;
					this.SendPropertyChanged("TaskLocation");
					this.OnTaskLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskSpecialEvent", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskSpecialEvent
		{
			get
			{
				return this._TaskSpecialEvent;
			}
			set
			{
				if ((this._TaskSpecialEvent != value))
				{
					this.OnTaskSpecialEventChanging(value);
					this.SendPropertyChanging();
					this._TaskSpecialEvent = value;
					this.SendPropertyChanged("TaskSpecialEvent");
					this.OnTaskSpecialEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDetails", DbType="VarChar(MAX)")]
		public string TaskDetails
		{
			get
			{
				return this._TaskDetails;
			}
			set
			{
				if ((this._TaskDetails != value))
				{
					this.OnTaskDetailsChanging(value);
					this.SendPropertyChanging();
					this._TaskDetails = value;
					this.SendPropertyChanged("TaskDetails");
					this.OnTaskDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TASK", Storage="_User", ThisKey="UserLogin", OtherKey="Login", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TASK.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TASK.Add(this);
						this._UserLogin = value.Login;
					}
					else
					{
						this._UserLogin = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login;
		
		private string _Password;
		
		private string _Nom;
		
		private string _Prenom;
		
		private System.DateTime _Dob;
		
		private string _Gender;
		
		private System.Data.Linq.Binary _PhotoProfile;
		
		private string _Job;
		
		private int _Adresseid;
		
		private string _Status;
		
		private System.Nullable<int> _NombreEnfant;
		
		private EntitySet<Child> _Child;
		
		private EntitySet<Parent> _Parent;
		
		private EntitySet<Partner> _Partner;
		
		private EntitySet<TASK> _TASK;
		
		private EntityRef<Adresse> _Adresse;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnDobChanging(System.DateTime value);
    partial void OnDobChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhotoProfileChanging(System.Data.Linq.Binary value);
    partial void OnPhotoProfileChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnAdresseidChanging(int value);
    partial void OnAdresseidChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNombreEnfantChanging(System.Nullable<int> value);
    partial void OnNombreEnfantChanged();
    #endregion
		
		public User()
		{
			this._Child = new EntitySet<Child>(new Action<Child>(this.attach_Child), new Action<Child>(this.detach_Child));
			this._Parent = new EntitySet<Parent>(new Action<Parent>(this.attach_Parent), new Action<Parent>(this.detach_Parent));
			this._Partner = new EntitySet<Partner>(new Action<Partner>(this.attach_Partner), new Action<Partner>(this.detach_Partner));
			this._TASK = new EntitySet<TASK>(new Action<TASK>(this.attach_TASK), new Action<TASK>(this.detach_TASK));
			this._Adresse = default(EntityRef<Adresse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="Date NOT NULL")]
		public System.DateTime Dob
		{
			get
			{
				return this._Dob;
			}
			set
			{
				if ((this._Dob != value))
				{
					this.OnDobChanging(value);
					this.SendPropertyChanging();
					this._Dob = value;
					this.SendPropertyChanged("Dob");
					this.OnDobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoProfile", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PhotoProfile
		{
			get
			{
				return this._PhotoProfile;
			}
			set
			{
				if ((this._PhotoProfile != value))
				{
					this.OnPhotoProfileChanging(value);
					this.SendPropertyChanging();
					this._PhotoProfile = value;
					this.SendPropertyChanged("PhotoProfile");
					this.OnPhotoProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresseid", DbType="Int NOT NULL")]
		public int Adresseid
		{
			get
			{
				return this._Adresseid;
			}
			set
			{
				if ((this._Adresseid != value))
				{
					if (this._Adresse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdresseidChanging(value);
					this.SendPropertyChanging();
					this._Adresseid = value;
					this.SendPropertyChanged("Adresseid");
					this.OnAdresseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEnfant", DbType="Int")]
		public System.Nullable<int> NombreEnfant
		{
			get
			{
				return this._NombreEnfant;
			}
			set
			{
				if ((this._NombreEnfant != value))
				{
					this.OnNombreEnfantChanging(value);
					this.SendPropertyChanging();
					this._NombreEnfant = value;
					this.SendPropertyChanged("NombreEnfant");
					this.OnNombreEnfantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Child", Storage="_Child", ThisKey="Login", OtherKey="UserLogin")]
		public EntitySet<Child> Child
		{
			get
			{
				return this._Child;
			}
			set
			{
				this._Child.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Parent", Storage="_Parent", ThisKey="Login", OtherKey="UserLogin")]
		public EntitySet<Parent> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				this._Parent.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Partner", Storage="_Partner", ThisKey="Login", OtherKey="UserLogin")]
		public EntitySet<Partner> Partner
		{
			get
			{
				return this._Partner;
			}
			set
			{
				this._Partner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TASK", Storage="_TASK", ThisKey="Login", OtherKey="UserLogin")]
		public EntitySet<TASK> TASK
		{
			get
			{
				return this._TASK;
			}
			set
			{
				this._TASK.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adresse_User", Storage="_Adresse", ThisKey="Adresseid", OtherKey="Adresseid", IsForeignKey=true)]
		public Adresse Adresse
		{
			get
			{
				return this._Adresse.Entity;
			}
			set
			{
				Adresse previousValue = this._Adresse.Entity;
				if (((previousValue != value) 
							|| (this._Adresse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adresse.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Adresse.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._Adresseid = value.Adresseid;
					}
					else
					{
						this._Adresseid = default(int);
					}
					this.SendPropertyChanged("Adresse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Child(Child entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Child(Child entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Parent(Parent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Parent(Parent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Partner(Partner entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Partner(Partner entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TASK(TASK entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TASK(TASK entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
